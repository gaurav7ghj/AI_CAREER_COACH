import React from "react";

/**
 * ResumeTemplate renders the full user resume data
 * All data fields are expected in the form generated by AI or user input
 * It handles missing data gracefully and supports fallback/property normalization
 */
export default function ResumeTemplate({ data }) {
  if (!data) return null;

  const {
    name,
    email,
    phone,
    location,
    summary,
    skills,
    experience,
    education,
    projects,
  } = data;

  // Helper to get field with fallbacks (for inconsistent AI keys)
  const getField = (obj, keyPrimary, keyFallback) => {
    if (!obj) return "";
    return obj[keyPrimary] || obj[keyFallback] || "";
  };

  return (
    <section className="resume-template" style={{ maxWidth: 900, margin: "auto", padding: "1.5rem" }}>
      {/* Header */}
      <header style={{ textAlign: "center", marginBottom: "2rem" }}>
        <h1>{name || "Your Name"}</h1>
        <p>
          {email && <span>{email}</span>}
          {email && phone && <span> | </span>}
          {phone && <span>{phone}</span>}
          {location && <span> | {location}</span>}
        </p>
      </header>

      {/* Summary */}
      {summary && (
        <section style={{ marginBottom: "1.8rem" }}>
          <h2>Summary</h2>
          <p>{summary}</p>
        </section>
      )}

      {/* Skills */}
      {skills && skills.length > 0 && (
        <section style={{ marginBottom: "1.8rem" }}>
          <h2>Skills</h2>
          <ul style={{ listStyle: "none", padding: 0, display: "flex", flexWrap: "wrap", gap: "0.6rem" }}>
            {(Array.isArray(skills) ? skills : skills.split(",")).map((skill, idx) => (
              <li
                key={idx}
                style={{
                  background: "#6f45c2",
                  color: "#fff",
                  borderRadius: "0.5rem",
                  padding: "0.3rem 0.9rem",
                  fontSize: "0.9rem",
                }}
              >
                {skill.trim()}
              </li>
            ))}
          </ul>
        </section>
      )}

      {/* Projects */}
      {projects && projects.length > 0 && (
        <section style={{ marginBottom: "1.8rem" }}>
          <h2>Projects</h2>
          {projects.map((proj, idx) => (
            <div key={idx} style={{ marginBottom: "1.2rem" }}>
              <h3>{getField(proj, "name", "project Name") || "Untitled Project"}</h3>
              <p>{getField(proj, "description", "Description") || "No description provided."}</p>

              {proj.technologies && (
                <p>
                  <strong>Technologies: </strong>
                  {proj.technologies}
                </p>
              )}
              {proj.duration && (
                <p>
                  <strong>Duration: </strong>
                  {proj.duration}
                </p>
              )}
              {proj.link && (
                <p>
                  <a href={proj.link} target="_blank" rel="noopener noreferrer">
                    Project Link
                  </a>
                </p>
              )}
            </div>
          ))}
        </section>
      )}

      {/* Experience */}
      {experience && experience.length > 0 && (
        <section style={{ marginBottom: "1.8rem" }}>
          <h2>Experience</h2>
          {experience.map((exp, i) => (
            <div key={i} style={{ marginBottom: "1.2rem" }}>
              <h3>
                {getField(exp, "title", "jobTitle") || "Job Title"}{" "}
                {exp.company && `at ${exp.company}`}
              </h3>
              <div style={{ fontStyle: "italic", marginBottom: "0.5rem" }}>
                {exp.from || ""} – {exp.to || "Present"} {exp.location && `| ${exp.location}`}
              </div>
              {Array.isArray(exp.bullets) && exp.bullets.length > 0 ? (
                <ul>
                  {exp.bullets.filter(Boolean).map((b, j) => (
                    <li key={j}>{b}</li>
                  ))}
                </ul>
              ) : (
                <p>No details provided.</p>
              )}
            </div>
          ))}
        </section>
      )}

      {/* Education */}
      {education && education.length > 0 && (
        <section style={{ marginBottom: "1.8rem" }}>
          <h2>Education</h2>
          {education.map((edu, i) => (
            <div key={i} style={{ marginBottom: "1.2rem" }}>
              <h3>
                {getField(edu, "degree", "Degree") || "Degree"} - {getField(edu, "institution", "Institution") || "Institution"}
              </h3>
              <div style={{ fontStyle: "italic", marginBottom: "0.5rem" }}>
                {edu.from || ""} – {edu.to || "Present"} {edu.location && `| ${edu.location}`}
              </div>
              {edu.gpa && <p>GPA: {edu.gpa}</p>}
            </div>
          ))}
        </section>
      )}
    </section>
  );
}
